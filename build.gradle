apply plugin: 'groovy'

sourceSets {
  jobs {
    groovy {
      srcDirs 'src/jobs'
      compileClasspath += main.compileClasspath
    }
    compileClasspath += sourceSets.main.output
    runtimeClasspath += sourceSets.main.output
  }
}

repositories {
  mavenCentral()
  maven { url 'https://repo.jenkins-ci.org/releases/' }
  jcenter()
}

configurations {
  testPlugins {}
}

// Exclude buggy Xalan dependency this way the JRE default TransformerFactory is used
// The xalan pulled in by htmlunit does not properly deal with spaces folder / job names
configurations.all*.exclude group: 'xalan'

dependencies {
  implementation 'org.codehaus.groovy:groovy-all:2.4.12'
  implementation "org.jenkins-ci.plugins:job-dsl-core:${jobDslVersion}"

  // for the rest task
  implementation('org.codehaus.groovy.modules.http-builder:http-builder:0.7.2') {
    exclude(module: 'groovy')
  }
  implementation('org.apache.ant:ant:1.10.9')

  testImplementation 'org.spockframework:spock-core:1.3-groovy-2.4'
  testImplementation 'cglib:cglib-nodep:2.2.2' // used by Spock

  // Jenkins test harness dependencies
  testImplementation('org.jenkins-ci.main:jenkins-test-harness:2.72') {
    exclude group: 'org.netbeans.modules', module: 'org-netbeans-insane'
    // https://github.com/sheehan/job-dsl-gradle-example/issues/90
  }
  testImplementation("org.jenkins-ci.main:jenkins-war:${jenkinsVersion}") {
    exclude group: 'org.jenkins-ci.ui', module: 'bootstrap'
    // https://github.com/sheehan/job-dsl-gradle-example/issues/87
  }

  // Job DSL plugin including plugin dependencies
  testImplementation "org.jenkins-ci.plugins:job-dsl:${jobDslVersion}"
  testImplementation "org.jenkins-ci.plugins:job-dsl:${jobDslVersion}@jar"
  testImplementation 'com.thoughtworks.xstream:xstream:1.4.15'
  testImplementation 'org.jenkins-ci.plugins:structs:1.22@jar'
  testImplementation 'org.jenkins-ci.plugins:cloudbees-folder:6.15@jar'
  testImplementation 'org.jenkins-ci.plugins:script-security:1.76@jar'

  // Run the following script in the Script Console of your Jenkins instance to generate
  // the above testPlugins list. (adapted from https://git.io/fjpUs)
  //  note that I did not install all of these, I merely run './gradlew --info test' and only install the ones that
  //  are used for the tests or throw a traceback.
  /*
    Jenkins.instance.pluginManager.plugins
        .findAll { !(it.shortName in ['job-dsl', 'structs']) }
        .collect { "testPlugins '${it.manifest.mainAttributes.getValue("Group-Id")}:${it.shortName}:${it.version}'" }
        .sort()
        .each { println it }
 */

  // plugins to install in test instance
  // These are the Maven IDs for the given plugins, which can be found at:
  // https://<jenkins.hostname>/pluginManager/plugin/<plugin ID>/thirdPartyLicenses
  // https://2-277-2-jenkins-csb-uc.apps.ocp4.prod.psi.redhat.com/plugins.txt (plugins.txt -> update-center/2.277/default/plugins.txt)
  testPlugins 'org.jenkins-ci.plugins:ansible:1.1'
  testPlugins 'org.jenkins-ci.plugins:ansible-tower:0.16.0'
  testPlugins 'com.coravy.hudson.plugins.github:github:1.33.1'
  testPlugins 'org.jenkins-ci.plugins.workflow:workflow-cps-global-lib:2.18'
  testPlugins 'org.jenkins-ci.plugins.workflow:workflow-cps:2.90'
  testPlugins 'org.jenkins-ci.plugins.workflow:workflow-step-api:2.23'
  testPlugins 'org.jenkins-ci.plugins:any-buildstep:0.1'
  testPlugins 'org.jenkins-ci.plugins:build-blocker-plugin:1.7.7'
  testPlugins 'org.jenkins-ci.plugins:cachet-gating:1.0.9'
  testPlugins 'org.jenkins-ci.plugins:cloudbees-folder:6.15'
  testPlugins 'org.jenkins-ci.plugins:credentials:2.3.17'
  testPlugins 'org.jenkins-ci.plugins:cvs:2.18'
  testPlugins 'org.jenkins-ci.plugins:dashboard-view:2.15'
  testPlugins 'org.jenkins-ci.plugins:extra-columns:1.23'
  testPlugins 'org.jenkins-ci.plugins:envinject:2.4.0'
  testPlugins 'org.jenkins-ci.plugins:flexible-publish:0.16.1'
  testPlugins 'org.jenkins-ci.plugins:generic-webhook-trigger:1.72'
  testPlugins 'org.jenkins-ci.plugins:ghprb:1.42.2'
  testPlugins 'org.jenkins-ci.plugins:git:4.7.1'
  testPlugins 'org.jenkins-ci.plugins:gradle:1.36'
  testPlugins 'org.jenkins-ci.plugins:groovy:2.3'
  testPlugins 'org.jenkins-ci.plugins:htmlpublisher:1.25'
  testPlugins 'org.jenkins-ci.plugins:jms-messaging:1.1.21'
  testPlugins 'org.jenkins-ci.plugins:junit:1.49'
  testPlugins 'org.jenkins-ci.plugins:mailer:1.34'
  testPlugins 'org.jenkins-ci.plugins:matrix-project:1.18'
  testPlugins 'org.jenkins-ci.plugins:parameterized-trigger:2.40'
  testPlugins 'org.jenkins-ci.plugins:progress-bar-column-plugin:1.0'
  testPlugins 'org.jenkins-ci.plugins:sidebar-link:1.12.0'
  testPlugins 'org.jenkins-ci.plugins:ssh-agent:1.22'
  testPlugins 'org.jenkins-ci.plugins:test-results-analyzer:0.3.5'
  testPlugins 'org.jenkins-ci.plugins:throttle-concurrents:2.2'
  testPlugins 'org.jenkins-ci.plugins:token-macro:2.15'
  testPlugins 'org.jenkins-ci.plugins:view-job-filters:2.3'
  testPlugins 'org.jenkins-ci.plugins:ws-cleanup:0.39'
  testPlugins group: 'org.jenkins-ci.plugins.workflow', name: 'workflow-aggregator', version: '2.6'
  testPlugins 'com.openshift.jenkins.plugins:openshift-client:1.0.34'
  testPlugins 'com.openshift.jenkins:openshift-pipeline:1.0.57'
  testPlugins 'io.fabric8.jenkins.plugins:openshift-sync:1.0.46'
  testPlugins 'org.openshift.jenkins:openshift-login:1.0.26'
  testPlugins 'org.jenkinsci.plugins:kubernetes-credentials:0.8.0'
  testPlugins 'com.cloudbees.jenkins.plugins:kubernetes-credentials-provider:0.18-1'
  testPlugins 'org.csanchez.jenkins.plugins:kubernetes:1.29.2'
  testPlugins 'org.jenkins-ci.plugins:kubernetes-client-api:4.13.2-1'
  testPlugins 'org.6wind.jenkins:lockable-resources:2.10'
}

task resolveTestPlugins(type: Copy) {
  from configurations.testPlugins
  into new File(sourceSets.test.output.resourcesDir, 'test-dependencies')
  include '*.hpi'
  include '*.jpi'
  def mapping = [:]

  doFirst {
    configurations.testPlugins.resolvedConfiguration.resolvedArtifacts.each {
      mapping[it.file.name] = "${it.name}.${it.extension}"
    }
  }
  rename { mapping[it] }

  doLast {
    List<String> baseNames = source*.name.collect { mapping[it] }.collect { it[0..it.lastIndexOf('.') - 1] }
    new File(destinationDir, 'index').setText(baseNames.join('\n'), 'UTF-8')
  }
}

test {
  dependsOn tasks.resolveTestPlugins
  inputs.files sourceSets.jobs.groovy.srcDirs

  // set build directory for Jenkins test harness, JENKINS-26331
  systemProperty 'buildDirectory', project.buildDir.absolutePath
  //maxParallelForks = 2
  //maxHeapSize = '128m'
  //jvmArgs '-Xmx512m', '-Xms128m', "-XX:+UnlockExperimentalVMOptions", "-XX:+UseCGroupMemoryLimitForHeap"
}

task rest(dependsOn: 'classes', type: JavaExec) {
  main = 'com.dslexample.rest.RestApiScriptRunner'
  classpath = sourceSets.main.runtimeClasspath
  systemProperties System.getProperties()
}
